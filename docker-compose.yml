version: '3.8'

services:
  traefik:
    container_name: traefik
    image: traefik:v2.2
    ports:
        - "443:443"
        - "80:80"
    volumes:
        - ./traefik/conf/traefik.toml:/etc/traefik/traefik.toml:ro
        - ./traefik/certs/acme.json:/etc/acme.json:rw
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - ./traefik/logs/traefik.log:/etc/traefik/applog.log:rw
    restart: unless-stopped
    networks: 
      - traefik_network
    labels:
        - "traefik.http.routers.api.rule=Host(`traefik.127.0.0.1.traefik.me`)"
        - "traefik.http.routers.api.service=api@internal"
        - "traefik.http.routers.api.entrypoints=https"
        - "traefik.http.routers.api.tls=true"
        - --traefik.http.routers.api.tls.certresolver=le
        - --traefik.http.routers.api.middlewares=auth
        - --traefik.http.middlewares.auth.basicauth.users=master:$$apr1$$tAp06rcF$$/PVaxQ0dUZZqy8PYdp/S7/
        #- --certificatesresolvers.le.acme.traefik=true
        - --certificatesresolvers.le.acme.traefik.entrypoint=http
        - --certificatesresolvers.le.acme.email=wow.purl9@gmail.com
        - --certificatesresolvers.le.acme.storage=/etc/acme.json"
        - --certificatesresolvers.le.acme.tlschallenge=true


########## APP TEST WHOAMI ##########  
  appwhoami:
        image: containous/whoami
        container_name: app
        restart: unless-stopped
        networks: 
          - traefik_network
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.whoami.rule=Host(`app.127.0.0.1.traefik.me`)"
            - "traefik.http.routers.whoami.entrypoints=https"
            - "traefik.http.services.whoami.loadbalancer.server.port=80"
            - "traefik.http.routers.whoami.tls=true"
            #- --traefik.http.routers.whoami.tls.certresolver="le"
            - --certificatesresolvers.le.acme.tlschallenge=true

########## APP TEST 1 WHOAMI ##########
  app1whoami:
        image: containous/whoami
        container_name: app1
        restart: unless-stopped
        networks: 
          - traefik_network
        labels:
              - "traefik.enable=true"
              - "traefik.http.routers.whoami1.rule=Host(`app.127.0.0.1.traefik.me`) && Pathprefix(`/app1`)"
              - "traefik.http.routers.whoami1.entrypoints=https"
              - "traefik.http.services.whoami1.loadbalancer.server.port=80"
              - "traefik.http.routers.whoami1.tls=true"
              #- --traefik.http.routers.whoami1.tls.certresolver="letsencrypt"
              - --certificatesresolvers.le.acme.tlschallenge=true

########## APP TEST 2 WHOAMI  ##########
  app2whoami:
           image: containous/whoami
           container_name: app2
           restart: unless-stopped
           networks: 
            - traefik_network
           labels:
              - "traefik.enable=true"
              - "traefik.http.routers.whoami2.rule=Host(`app.127.0.0.1.traefik.me`) && Pathprefix(`/app2`)"
              - "traefik.http.routers.whoami2.entrypoints=https"
              - "traefik.http.services.whoami2.loadbalancer.server.port=80"
              - "traefik.http.routers.whoami2.tls=true"
              #- --traefik.http.routers.whoami2.tls.certresolver="letsencrypt"
              - --certificatesresolvers.le.acme.tlschallenge=true
networks:
    traefik_network:
        driver: bridge